#!/bin/bash
USER=$1
HOST=$2
REMOTE_DIRECTORY=$3
declare GIT_OUTPUT=($(git --no-pager diff --name-status))


# TEST COMMAND LINE ARGUMENTS
if test -z "$1"
then 
    echo "** Improper usage. Proper usage: gscp {username} {remote} {remote directory}"
    exit 1
fi

if test -z "$2"
then 
    echo "** Improper usage. Proper usage: gscp {username} {remote} {remote directory}"
    exit 1
fi

if test -z "$3"
then 
    echo "** Improper usage. Proper usage: gscp {username} {remote} {remote directory}"
    exit 1
fi

# TEST REMOTE DIRECTORIES
if ssh $1@$2 "[ ! -d $REMOTE_DIRECTORY ]"
then
    echo "** Remote directory does not exist: $REMOTE_DIRECTORY"
    exit 1
fi

if ssh $1@$2 "[ ! -d $REMOTE_DIRECTORY/.git/ ]"
then
    echo "** Remote directory is not a git directory: $REMOTE_DIRECTORY"
    exit 1
fi

# FIX VARIABLES
if [[ $REMOTE_DIRECTORY != */ ]]
then
    echo "** Appending / to REMOTE_DIRECTORY"
    REMOTE_DIRECTORY=$REMOTE_DIRECTORY/
fi 

# EXECUTE gscp
for ((i=0;i<=${#GIT_OUTPUT[@]}-1;i++)); do
    # skip even indexes (files)
    if [ $(( $i % 2 )) -ne 0 ]
    then
        continue
    fi 
    # determine what to do with the file
    if test "${GIT_OUTPUT[${i}]}" == "M"
    then
        echo "** Uploading modified file: ${GIT_OUTPUT[${i}+1]}"
        eval "scp ${GIT_OUTPUT[${i+1}]} ${USER}@${HOST}:${REMOTE_DIRECTORY}$(dirname ${GIT_OUTPUT[${i+1}]})"
    elif test "${GIT_OUTPUT[${i}]}" == "A"
    then
        echo "** Uploading added file: ${GIT_OUTPUT[${i}+1]}"
        eval "scp ${${GIT_OUTPUT[${i+1}]}} ${USER}@${HOST}:${REMOTE_DIRECTORY}$(dirname ${GIT_OUTPUT[${i+1}]})"
    elif test "${GIT_OUTPUT[${i}]}" == "D"
    then
        echo "** Removing deleted file: ${GIT_OUTPUT[${i}+1]}"
        if ssh $1@$2 "[ -f ${REMOTE_DIRECTORY}${GIT_OUTPUT[${i}+1]} ]"
        then
            ssh $1@$2 "rm ${REMOTE_DIRECTORY}${GIT_OUTPUT[${i}+1]}"
        fi
    fi
done

exit 0
